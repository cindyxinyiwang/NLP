import nltk
from nltk.corpus import brown, gutenberg
from nltk import sent_tokenize, word_tokenize

import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import numpy as np

datafile = "result.txt"
data = ""
total = 0
count = {}
probs = [0.033249574395482422, 0.035458253445317223, 0.031324638617739771, 0.030791130304138676, 0.030305888884107287, 0.031064334265411928, 0.034506602678073005, 0.038473990392921632, 0.053149731334745459, 0.087885061994936536, 0.12459209252309156, 0.13517133591130534, 0.11854570434370608, 0.087018010087511699, 0.0551551316224844, 0.031445046634492574, 0.016500842015028643, 0.0083294614636826424, 0.004209354366347332, 0.0021534209488393657, 0.0015451618404472547, 0.0007706734318396356, 0.00045528597745067421, 0.00034323853478458521, 0.00030888186900594332, 0.00027266802703692408, 0.00026048372623550841, 0.00026507307328781901, 0.0002536172055504736, 0.00025155440561228055, 0.00025409626513315045, 0.00024942598107372086, 0.00024909129561185076, 0.00024972347926204989, 0.0002477656786844436, 0.00046461560813613881, 0.00023763105290114755, 0.00022539425241943848, 0.00022184396153960046, 0.0002115627741488188, 0.00020356313536411911, 0.00019577130781391395, 0.00018802760497064436, 0.00018317575951686695, 0.0001720042650477772, 0.00016446618595232322, 0.00015762591510743508, 0.00014687004310733436, 0.00014047164457158196, 0.00013131701282042849, 0.00012524236231315175, 0.00011756428407024885, 0.00010992558058756597, 0.00010245093860579981, 9.4945671810529197e-05, 8.7897589731146528e-05, 8.3071994117515823e-05, 7.7423903512622582e-05, 7.3602364284602244e-05, 6.5733974700635947e-05, 6.2334620401641318e-05, 5.7854647683275189e-05, 5.3411862238450175e-05, 4.7768146606914713e-05, 4.614503149117854e-05, 4.0523190726431974e-05, 3.7075711720501781e-05, 3.4126979677358448e-05, 3.0357940129631466e-05, 2.7999829489788354e-05, 2.4587350270720398e-05, 2.2881110661186422e-05, 2.1352057472642508e-05, 1.9057383946487197e-05, 1.6977084114863079e-05, 1.5784903874868185e-05, 1.3862103084124125e-05, 1.2573673430258082e-05, 1.1123369762154201e-05, 1.0480248678560625e-05, 9.4433799927668997e-06, 8.4283861737620723e-06, 7.3346428343172149e-06, 6.9168328786492792e-06, 5.9674636600111426e-06, 5.4643417238665081e-06, 5.6152783047098986e-06, 4.0687252227348704e-06, 4.0599752760193113e-06, 3.4059167590312866e-06, 3.3227922652334774e-06, 2.8546701159510783e-06, 2.565921874337636e-06, 2.340610746411995e-06, 2.0081127712207585e-06, 1.8418637836251401e-06, 1.6603023892772937e-06, 1.4349912613516531e-06, 1.327804414086057e-06, 0]



#real_plt, = plt.plot(count.keys(), probs, linewidth=3, color='g')
real_plt, = plt.plot([i for i in range(100)], probs, linewidth=3, color='g')
plt.xlim([0, 100])
#plt.savefig("word_len.png")
m = 10.5851289305
v = 26.155766362
m_log = np.log(m/( (1+v/(m**2))**0.5 ))
s_log = np.log(1+v/(m**2)) ** 0.5

#plot log normal distribution
#mu, sigma = 3.25, 0.45 # mean and standard deviation
mu, sigma = m_log, s_log
print m_log, s_log, m, v
x = np.linspace(1, 100, 10000)
pdf = (np.exp(-(np.log(x) - mu)**2 / (2 * sigma**2)) / (x * sigma * np.sqrt(2 * np.pi)))
line_lognorm, = plt.plot(x, pdf, linewidth=2, color='r')

#plot normal distribution
line_norm, = plt.plot(x, mlab.normpdf(x, m, np.sqrt(v)), linewidth=2, color='k')
# plot probabilites obtained by berkerly parser
b_prob = [0, 0.0035237700708999546, 0.004540253071801108, 0.005670779362664136, 0.006509449132521744, 0.010003770166938228, 0.015175545661952762, 0.02023282514383079, 0.02492212660337487, 0.02858613120202318, 0.03119180600983595, 0.032644580100564896, 0.03340794865198185, 0.03352666309239694, 0.03311452745438423, 0.03230941022989179, 0.031217276069111545, 0.029932988641918314, 0.028514453053581298, 0.027028120093320965, 0.025517080286036765, 0.024009741301823807, 0.022531131184157702, 0.021097092585539507, 0.019719557341012238, 0.018406124493552837, 0.01716127125772899, 0.015987137935393834, 0.014883736550738491, 0.013849950589958953, 0.012883677868498767, 0.011982217789347336, 0.011142482226450413, 0.010361141026452053, 0.00963478652936984, 0.008959998141594594, 0.008333425213555692, 0.007751825959759251, 0.007212095340986956, 0.006711285482842196, 0.006246612472869113, 0.0058154618524964615, 0.0054153868105329605, 0.005044104503104311, 0.004699490259410519, 0.004379570123118744, 0.004082513087198912, 0.0038066226281486567, 0.0035503283073239278, 0.003312177410313341, 0.003090826806298775, 0.0028850351653677236, 0.002693655523274581, 0.0025156282786914157, 0.0023499746066763315, 0.0021957903013826827, 0.0020522400410035147, 0.0019185520568274555, 0.001794013193884219, 0.0016779643396213032, 0.001569796200946929, 0.0014689454072910348, 0.0013748909176517015, 0.001287150710693388, 0.0012052787369661367, 0.0011288621138335854, 0.0010575185444567257, 0.0009908939433953764, 0.0009286602525418495, 0.000870513432166057, 0.0008161716129993718, 0.0007653733962987129, 0.0007178762898467142, 0.0006734552687829124, 0.0006319014510406163, 0.0005930208779929403, 0.0005566333916734926, 0.0005225716006487069, 0.0004906799272734553, 0.00046081372966572023, 0.00043283849229246494, 0.0004066290795693807, 0.000382069047346403, 0.0003590500075807051, 0.00033747104189291215, 0.000317238160063031, 0.0002982637998527279, 0.00028046636484271734, 0.0002637697972503061, 0.0002481031829448523, 0.00023340038610999414, 0.00021959971121278724, 0.00020664359013314562, 0.0001944782924836829, 0.00018305365731168644, 0.00017232284452280218, 0.00016224210450129368, 0.00015277056452552218, 0.00014387003069061963, 0.00013550480415407232, 0.00012764151061494573, 0.00012024894202453622]
line_gram, = plt.plot([ i for i in range(len(b_prob))], b_prob, linewidth=2,color='b')

plt.legend([line_lognorm, line_norm, line_gram, real_plt], [ 'lognormal', 'normal', 'grammar', 'Gigaword data'])
plt.show()
